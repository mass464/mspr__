name: Global Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job pour v√©rifier que tous les workflows CI sont d√©clench√©s
  check-workflows:
    name: Check All Workflows
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check modified files
      id: check-files
      run: |
        echo "Checking which services have been modified..."
        
        # V√©rifier les modifications dans chaque service
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^backend/auth-service/"; then
          echo "auth-service=true" >> $GITHUB_OUTPUT
        else
          echo "auth-service=false" >> $GITHUB_OUTPUT
        fi
        
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^backend/order-service/"; then
          echo "order-service=true" >> $GITHUB_OUTPUT
        else
          echo "order-service=false" >> $GITHUB_OUTPUT
        fi
        
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^backend/product-service/"; then
          echo "product-service=true" >> $GITHUB_OUTPUT
        else
          echo "product-service=false" >> $GITHUB_OUTPUT
        fi
        
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^frontend/"; then
          echo "frontend=true" >> $GITHUB_OUTPUT
        else
          echo "frontend=false" >> $GITHUB_OUTPUT
        fi

    - name: Display workflow status
      run: |
        echo "=== Workflow Status ==="
        echo "Auth Service: ${{ steps.check-files.outputs.auth-service }}"
        echo "Order Service: ${{ steps.check-files.outputs.order-service }}"
        echo "Product Service: ${{ steps.check-files.outputs.product-service }}"
        echo "Frontend: ${{ steps.check-files.outputs.frontend }}"
        echo "======================"

  # Job pour les tests d'int√©gration globaux
  integration-tests:
    name: Global Integration Tests
    runs-on: ubuntu-latest
    needs: check-workflows
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Run global integration tests
      run: |
        echo "Running global integration tests..."
        # Ici tu peux ajouter des tests qui v√©rifient l'int√©gration entre tous les services
        # Par exemple, tester que le frontend peut communiquer avec tous les services backend
        
        echo "‚úÖ Global integration tests completed"

  # Job pour les tests de s√©curit√©
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security scan
      run: |
        echo "Running security scan..."
        # Ici tu peux ajouter des outils de s√©curit√© comme:
        # - npm audit
        # - Snyk
        # - OWASP ZAP
        
        echo "‚úÖ Security scan completed"

  # Job pour les tests de performance
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [check-workflows, integration-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run performance tests
      run: |
        echo "Running performance tests..."
        # Ici tu peux ajouter des tests de performance comme:
        # - Artillery
        # - k6
        # - Lighthouse CI
        
        echo "‚úÖ Performance tests completed"

  # Job pour les notifications
  notifications:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [check-workflows, integration-tests, security-scan, performance-tests]
    if: always()
    
    steps:
    - name: Check workflow status
      id: check-status
      run: |
        if [[ "${{ needs.check-workflows.result }}" == "success" && 
              "${{ needs.integration-tests.result }}" == "success" && 
              "${{ needs.security-scan.result }}" == "success" && 
              "${{ needs.performance-tests.result }}" == "success" ]]; then
          echo "status=success" >> $GITHUB_OUTPUT
        else
          echo "status=failure" >> $GITHUB_OUTPUT
        fi

    - name: Send success notification
      if: steps.check-status.outputs.status == 'success'
      run: |
        echo "üéâ All global pipeline checks passed!"
        echo "Services modified:"
        echo "- Auth Service: ${{ needs.check-workflows.outputs.auth-service }}"
        echo "- Order Service: ${{ needs.check-workflows.outputs.order-service }}"
        echo "- Product Service: ${{ needs.check-workflows.outputs.product-service }}"
        echo "- Frontend: ${{ needs.check-workflows.outputs.frontend }}"

    - name: Send failure notification
      if: steps.check-status.outputs.status == 'failure'
      run: |
        echo "‚ùå Some global pipeline checks failed!"
        echo "Check the workflow logs for details." 