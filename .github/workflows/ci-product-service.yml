name: CI - Product Service

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/product-service/**'
      - '.github/workflows/ci-product-service.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/product-service/**'
      - '.github/workflows/ci-product-service.yml'

jobs:
  test-product-service:
    name: Test Product Service
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: productdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/product-service/package-lock.json

    - name: Install dependencies
      working-directory: backend/product-service
      run: npm ci

    - name: Run tests
      working-directory: backend/product-service
      run: npm test
      env:
        DB_HOST: localhost
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: productdb
        DB_PORT: 3306
        JWT_SECRET: test-secret-key

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: backend/product-service/coverage/lcov.info
        flags: product-service
        name: product-service-coverage

  build-product-service:
    name: Build Product Service
    runs-on: ubuntu-latest
    needs: test-product-service
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/product-service/package-lock.json

    - name: Install dependencies
      working-directory: backend/product-service
      run: npm ci

    - name: Build Docker image
      working-directory: backend/product-service
      run: |
        docker build -t product-service:latest .
        echo "Product service Docker image built successfully"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: product-service-build
        path: backend/product-service/
        retention-days: 7 